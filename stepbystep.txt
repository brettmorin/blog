16/3/2013 - Started free internet course
3/4/2013  - Finished course
3/4/2013  - Blog - Created view_home_page.feature:
    =begin
      Alright.  An off-the-hip overview:
      1) Show a home page locally with a posts placeholder
      2) Format basic page divisions on home page
      3) Load a single post in entirety on the home page
      4) Add create post page, save to file
      5) Show created post on home page (reverse chron.)
      6) Replace post file with dev. db with post table
      
    =end
    Feature: View Home Page
      Scenario:  Successfully browse to home page
        Given web browser is launched
        When I browse to home page URL
        Then the output should be the home page
4/4/2013  - Blog - Git repo:
  $ git add . && git commit -m "first commit"
  - Created git repo at brettmorin/blog
  $ git remote add origin git@github-personal:brettmorin/blog.git 
4/4/2013  - Blog - Setup for home page:
  - Switch to new git branch "HomePage"
  $ git checkout -b HomePage
  - Bundle error trying to install Gemfile gems, fix with update:
  $ update --system
  - system already up to date
  $ gem install bundler
  - successfully installed
  - Follow setup as on cucumber book pages 204-205
  $ bundle init
  - Gemfile:
    source "https://rubygems.org"

    gem "sinatra"
    gem "cucumber"
    gem "rspec"
    gem "rack-test"
  $ bundle
  - successful
  $ geany blog_app.rb
    require 'sinatra'

    class BlogApp < Sinatra::Base
      set :data, ''
    end
  $ cd features/
  $ mkdir support
  $ cd support
4/5/2013 - Blog - Following exerpt of Cucumber Recipes book (on order)
  $ geany env.rb
    require File.join(File.dirname(__File__), '..', '..', 'blog_app')
  $ geany blog_app.rb
  - refactor - don't need data symbol as it is specific to book example
    require 'sinatra'

    class BlogApp < Sinatra::Base

    end
  $ geany Gemfile
  - add capybara
    source "https://rubygems.org"

    gem "sinatra"
    gem "cucumber"
    gem "rspec"
    gem "rack-test"
    gem "capybara"
  $ geany env.rb
  - refactor
    require File.expand_path(File.join(File.dirname(__FILE__), "..", "..", "blog_app"))

    require "capybara"
    require "capybara/cucumber"
     
    World do
      Capybara.app = Boiblog::BlogApp 
    end
4/6/2013 - Blog - Following tutorial http://loudcoding.com/posts/quick-tutorial-starting-with-cucumber-and-capybara-bdd-on-rails-project/
  $ geany features/view_home_page.feature
  - re-factor to change wording
    Feature: View Home Page
      Scenario:  Home page should say "Blog Home"
        When I visit the home page
        Then I should see "Blog Home"
  $ geany features/step_definitions/home_page_steps
  - re-factor
    require File.expand_path(File.join(File.dirname(__FILE__), "..", "support", "paths"))

    When /^I view the home page$/ do |page_name|
      visit path_to(page_name)
    end

    Then /^I should see "([^\"]*)"$/ do |text|
      page.should have_content(text)
    end
  $ touch features/support/paths.rb
  $ geany features/support/paths.rb
    module NavigationHelpers
      def path_to(page_name)
        case page_name
     
        when /the home\s?page/
          '/'
        else
          begin
            page_name =~ /the (.*) page/
            path_components = $1.split(/\s+/)
            self.send(path_components.push('path').join('_').to_sym)
          rescue Object => e
            raise "Can't find mapping from \"#{page_name}\" to a path.\n" +
              "Now, go and add a mapping in #{__FILE__}"
          end
        end
      end
    end

    World(NavigationHelpers)
  $ cucumber
  - boom! -doesn't like my post_steps.rb posts (multiline texts)
  - replaced code sections of posts that contained #{ } with \#{ }
  $ cucumber
  - success
  $ git add . && git commit
  $ git checkout master
  $ git merge HomePage
  $ git push -u origin master
4/11/2013 - Blog - Following tutorial http://testerstories.com/?p=898
  - In violation of test-first, I will add some code I might use later since I just read about it
  - Added config.ru and Procfile for rackup run but will need to add this to cucumber if I wish to use it
  - refer to foreman use and look into https://github.com/guard/guard-spork when using
  $ geany config.ru
    require './blog_app'
    run Boiblog::BlogApp
  $ geany Procfile
    web: bundle exec rackup config.ru -p $PORT
  - inflated blog_app.rb with rackup code, module and sinatra-reloader and sinatra-flash references
  - this is from site: http://testerstories.com/?p=898
  - All this extra code is part of a learning process and wouldn't normally be put in during TDD at this point as it has no test driver
  $ geany blog_app.rb
    require 'sinatra/base'
    require 'sinatra/reloader'

    module Boiblog
      class BlogApp < Sinatra::Base
        register Sinatra::Reloader
        
        get '/' do
          erb :home
        end
        
        post '/' do
          "You said '#{params[:message]}'."
        end
      end
    end

    if __FILE__ == $0
      Boiblog::BlogApp.run! port: 9292
    end
  $ geany views/home.erb
  - Capybara, before v 2.1 can't inspect <head><title> element, so put text in body to test for
    <!doctype html>
    <html>
    <head>
      <title>Blog Home</title>
    </head>
    <body>
    Blog Home
    </body>
    </html>
  $ cucumber
  - scenario passed
  $ git add . && git commit -m "View Home Page scenario 1 complete"
  $ git push -u origin master
4/14/2013 - Blog - Add post section to page
  $ geany features/view_home_page.feature
  - Add scenario to test for css div that will hold posts
    Scenario: Home page should have post section
      When I visit the home page
      Then it should have a post section
  $ geany features/step_definitions/home_page_steps.rb
  - When statement is a duplicate so just add step def for Then statement:
    Then /^it should have a (.+) section$/ do |section|
      page.should have_css("div.content_area")
    end
  - Originally put page.have_css? but that was always true, so I switched 
  $ cucumber
  - step failed as expected since no css was added to home.erb
  $ mkdir public/css/
  $ geany public/css/style.css
  - got this css grid idea from http://css-tricks.com/dont-overthink-it-grids/
    [class*='col-'] {
      float: left;
    }
  $ geany views/home.erb
  - add reference to style.css and meta tags and divs for grid and columns
    <!doctype html>
    <html>
    <head>
      <title>Blog Home</title>
      <meta http-equiv="Content-Language" content="English" />
      <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
      <link rel="stylesheet" type="text/css" href="/css/style.css" media="screen" />
    </head>
    <body>
    <h1>Blog Home</h1>
    <div class="grid">
      <div class="col-2-3">
         Main Content
      </div>
      <div class="col-1-3">
         Sidebar
      </div>
    </div>
    </body>
    </html>
  $ geany features/step_definitions/home_page_steps.rb
  - refactor for css class name change and add hash at the top to bridge technical name with feature wording
    sections = Hash["post" => "col-2-3"]

    require File.expand_path(File.join(File.dirname(__FILE__), "..", "support", "paths"))

    When /^I visit (.+)$/ do |page_name|
      visit path_to(page_name)
    end

    Then /^I should see "([^\"]*)"$/ do |text|
      page.should have_content(text)
    end

    Then /^it should have a (.+) section$/ do |section|
      page.should have_css("div." + sections[section])
    end
  $ cucumber
  - passed
  $ git add . && git commit -m "View Home Page scenario 2 (css test) complete"
  $ git push -u origin master
